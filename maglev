#!/usr/bin/env python3

from argparse import ArgumentParser
from server import start_server, RouterMiddleware, LoggerMiddleware, routing_plugin_pages
from pathlib import Path
import mako
import tabulate

parser = ArgumentParser()
parser.add_argument("-d", "--dir",
    action="store",
    default=str(Path.cwd()))
parser.add_argument("--routes",
    action="store_true",
    help="show a routing table for the current application (does not run the server)")
parser.add_argument("-p", "--port",
    action="store",
    default=8888,
    help="change the port"
)
args = parser.parse_args()

DIR = Path(args.dir)
ROUTER = RouterMiddleware([routing_plugin_pages(DIR / "pages")])

def routing_table_prettify(input):
    output = {}
    for k, v in input:
        for method in v:
            data = v[method].data
            output_k = method + " /" if k == "" else method + " " + k
            if isinstance(data, mako.template.Template):
                output[output_k] = Path(DIR, "pages", data.uri).relative_to(DIR)
            else:
                output[output_k] = type(data)
    return map(list, output.items())

if args.routes:
    print("========== Routes ==========")
    print(tabulate.tabulate(
        routing_table_prettify(
            ROUTER.routing_table.items()
        ), tablefmt="fancy_grid"
    ))

else:
    MIDDLEWARE_PLUGINS = [
        ROUTER,
        LoggerMiddleware()
    ]
    start_server(MIDDLEWARE_PLUGINS, port=args.port)
